%%%-------------------------------------------------------------------
%%% @author Tomasz Lichon
%%% @copyright (C) 2015 ACK CYFRONET AGH
%%% This software is released under the MIT license
%%% cited in 'LICENSE.txt'.
%%% @end
%%%-------------------------------------------------------------------
%%% @doc
%%% This file describes ctool application.
%%% @end
%%%-------------------------------------------------------------------

{application, ctool, [
    {description, "Common tools lib for onedata project"},
    {vsn, "3.0.0-beta3"},
    {registered, []},
    {applications, [
        crypto,
        asn1,
        public_key,
        ssl,
        hackney,
        kernel,
        stdlib,
        lager
    ]},

    {env, [
        %% ===================================================================
        %% LOGGING
        %% ===================================================================

        % Current loglevel in the application. Logs with lower importance will be completely discarded
        % Available loglevels are 0-7, respectively: emergency, alert, critical, error, warning, notice, info, debug
        {current_loglevel, 6},
        % Used to reset loglevel to default.
        % Available loglevels are 0-7, respectively: emergency, alert, critical, error, warning, notice, info, debug
        {default_loglevel, 6},


        %% ===================================================================
        %% WEB_CLIENT
        %% ===================================================================

        % This option turns off all verification procedures over SSL
        % connections. USE WITH CARE, only for testing purposes.
        {force_insecure_connections, false},


        %% ===================================================================
        %% CLOCK SYNCHRONIZATION
        %% ===================================================================

        % Causes the clock bias corrections to be ignored - the bias will not
        % change when this setting is set to true, but the previously existing
        % bias will be still applied. Note that this does not turn off the
        % synchronization, only ignores the corrections.
        {clock_sync_ignore_bias_corrections, false},
        % How many times a synchronization request is repeated to
        % estimate clocks bias and communication delay.
        {clock_sync_request_repeats, 5},
        % Communication delay considered satisfying. Below this value, clock
        % synchronization always succeeds. Above this value, it depends if the
        % delay is proportionally lower than the clocks bias.
        {clock_sync_satisfying_delay, 2000},
        % Maximum communication delay, higher values causes clock
        % synchronization to immediately fail.
        {clock_sync_max_allowed_delay, 10000},
        % Backup file that stores the information needed to restore the previous
        % clock synchronization.
        % NOTE: Must be overriden in the including project.
        {clock_sync_backup_file, "./etc/time_synchronization_data.json"},
        % For how long the synchronization backup is valid and can be used for
        % restoring the previous state.
        {clock_sync_backup_validity_secs, 900},  % 15 minutes

        %% ===================================================================
        %% TOKENS
        %% ===================================================================

        % Larger tokens will not be accepted
        {max_token_size, 1048576}, % 1MiB


        %% ===================================================================
        %% COMPATIBILITY
        %% ===================================================================

        % Path to the JSON file holding information about services compatibility
        % and verified gui hashes. This file evolves during service's lifetime -
        % can be overwritten by a newer registry when such is available.
        % NOTE: Must be overriden in the including project.
        {current_compatibility_registry_file, "./etc/compatibility.json"},
        % Path to the default compatibility.json for current software version.
        % NOTE: Must be overriden in the including project.
        {default_compatibility_registry_file, "./data/compatibility.default.json"},
        % URLs from the compatibility registry can be fetched - used when there
        % is a chance that the static registry is outdated. The URLs are tried
        % in the order up to the first successful mirror.
        {compatibility_registry_mirrors, [
            "https://onedata.org/compatibility.json",
            "https://raw.githubusercontent.com/onedata/compatibility-reference/develop/compatibility.json"
        ]},
        % For how long (in seconds) the cached compatibility registry is
        % considered up-to-date. Before that time passes, the registry will not
        % be reloaded from disk or fetched. In other words, you must wait up to
        % this time for Onezone to pick up a new compatibility registry from
        % known mirrors. The new registry is fetched when there is a chance that
        % it is outdated - in case an incompatibility between services or
        % unverified GUI is detected.
        {compatibility_registry_cache_ttl_secs, 900}, % 15 minutes
        % Minimum interval between consecutive checks if a newer registry is
        % available on compatibility registry mirrors.
        {compatibility_registry_check_for_updates_backoff_secs, 900}, % 15 minutes

        %% ===================================================================
        %% GEOLOCATION - uses MaxMind GeoLite2 databases.
        %% ===================================================================

        % To ensure that the Geo databases are up to date, you must set up an
        % account on MaxMind homepage and enter your licence key in the config
        % below. Onezone will automatically, periodically check for updates.
        % If the licence key is not given, no checks will be performed.
        {maxmind_licence_key, undefined},

        % NOTE: ALL PATHS should be overriden in the including project.

        % Path to compressed MaxMind's GeoLite2 databases used for mapping
        % IP addresses to ASN and country.
        {geo_db_file, #{
            asn =>     "./etc/geo-db/geo-db-asn.tar.gz",
            country => "./etc/geo-db/geo-db-country.tar.gz"
        }},
        % File that holds info about last successful and attempted updates
        % of the MaxMind DBs.
        {geo_db_status_file, "./etc/geo-db/geo-db-status.json"},

        % Mirrors from which the MaxMind DBs download will be attempted in case
        % the refresh period passes. Licence key will be concatenated as another
        % query string param.
        {geo_db_mirror, #{
            asn =>     "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-ASN&suffix=tar.gz",
            country => "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-Country&suffix=tar.gz"
        }},
        % How often (in days) should MaxMind DB refresh be performed
        {geo_db_refresh_period_days, 3},
        % Backoff (in seconds) in case fetching a newer DB fails
        {geo_db_refresh_backoff_secs, 43200} % 12 hours
    ]}
]}.
